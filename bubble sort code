package com.aman1;

import java.util.Arrays;
import java.util.Scanner;
/*1.  also known as sinking sort and exchange sort.
2. two loops gonna be there first for loop is for value of i which only used for
how many times the internal for loop that is for j is going to run. means that how many times that checking will happen in the array.
3. the second for loop that is of value of J...which actually points to the
elements of array and check with the previous element in the array.
and then swapping happens if the condition (j-1) > j is true.
space complexity os O(1) constant no extra space required because we are not making a new array or copying something.
time complexity : best case : O(N)
 worst case : O(N squeare)

 */
public class Bubblesort {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);

//        System.out.println("enter the array of size 10");
//        int[] arr = new int[10];

//        for (int i = 0; i < arr.length; i++) {
//            arr[i] = in.nextInt();
//        }
       int[] arr = {12,84,69,54,3,48,94,34,64};
       bubble(arr);
        }

        static void bubble(int[] arr) {
        boolean swapped = false;
            for (int i = 0; i < arr.length; i++) {

                for (int j = 1; j < arr.length-i ; j++) {

                    if(arr[j] < arr[j-1]) {
                        int temp = arr[j];
                        arr[j] = arr[j-1];
                        arr[j-1] = temp;
                        swapped=true;
                    }
                }
                if(!swapped){
                    break;
                }
            }

            System.out.println(Arrays.toString(arr));

    }
}
